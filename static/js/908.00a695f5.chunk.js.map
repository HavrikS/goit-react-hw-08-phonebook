{"version":3,"file":"static/js/908.00a695f5.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","redux/filter/filter-selectors.js","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/PatchContactForm/PatchContactForm.jsx","components/PatchContactModal/PatchContactModal.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["\nexport const getContacts = state => state.contacts.items;\nexport const getLoading = state => state.contacts.loading;\n// export const getsContacts = ({contacts}) => contacts.items;","import { useState } from 'react'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addContact } from '../../redux/contacts/contacts-operations';\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Notiflix from 'notiflix';\n\n\nconst ContactForm = () => {\n\n    \n    const reduxContacts = useSelector(getContacts);    \n    const dispatch = useDispatch()\n\n    const [name, setName] = useState('');\n    const [phone, setPhone] = useState('');\n\n    const handleChange = ({ target: { name, value } }) => {\n        switch (name) {\n            case 'name':\n                return setName(value);\n            case 'number':\n                return setPhone(value);\n            default:\n                return;\n        }\n    };\n\n    \n    const formSubmitHendler = ()  => {\n        if (reduxContacts.find(contact => contact.name === name)) {\n        Notiflix.Notify.failure(`${name} is alreadi in contacts.`);\n        } else\n        {const newContact = {            \n            name: name,\n            number: phone        \n        }; \n        dispatch(addContact(newContact))    \n        ;}    \n    }\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        formSubmitHendler();\n        setName('');\n        setPhone('');\n    };\n\n\n\n    return (\n\n        <Form onSubmit={handleSubmit}>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control type=\"text\" value={name} name=\"name\" placeholder=\"Enter name\" onChange={handleChange} pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\" required/>\n                <Form.Text className=\"text-muted\">\n                    \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                </Form.Text>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Phone</Form.Label>\n                <Form.Control type=\"tel\" value={phone} name=\"number\" placeholder=\"Enter phone\" onChange={handleChange} pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\" required/>\n                <Form.Text className=\"text-muted\">\n                    \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                </Form.Text>\n            </Form.Group>\n            <Button variant=\"outline-success\" type=\"submit\">\n                Add contact\n            </Button>\n        </Form>\n    );\n};\n\n\nexport default ContactForm;\n\n","export const getFilter = state => state.filter;","import React, { useRef } from 'react'\nimport { addFilter } from '../../redux/filter/filter-actions';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFilter } from '../../redux/filter/filter-selectors';\nimport Form from 'react-bootstrap/Form';\n\n\n\n\nconst Filter = () => {\n\n    const reduxFilter = useSelector(getFilter); \n    const dispatch = useDispatch()\n\n    const handleChangeFilter = event => {\n        const { value } = event.target;\n        dispatch(addFilter(value))   \n    }\n\n    const inputEl = useRef(null);\n    return (\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Label>Find contacts by name</Form.Label>\n                <Form.Control type=\"text\" value={reduxFilter} placeholder=\"Enter name\" name=\"filter\" ref={inputEl} onChange={handleChangeFilter} />               \n            </Form.Group>\n\n)}\n\nexport default Filter;","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { BallTriangle } from  'react-loader-spinner'\nimport styles from 'components/Loader/Loader.module.css'\n\n\n\n\nconst Loader = () => {\n    \n    return (\n        <div className={styles.loader}>\n            <BallTriangle />\n        </div>\n    )\n};\n\n\nexport default Loader;","import { useState } from 'react'\nimport { useDispatch } from \"react-redux\";\nimport { patchContact } from '../../redux/contacts/contacts-operations';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\n\n\n\nconst PatchContactForm = (props) => {\n\n\n    const dispatch = useDispatch()\n\n\n    const [name, setName] = useState('');\n    const [phone, setPhone] = useState('');\n\n    const handleChange = ({ target: { name, value } }) => {\n        switch (name) {\n            case 'name':\n                return setName(value);\n            case 'number':\n                return setPhone(value);\n            default:\n                return;\n        }\n    };\n\n    \n    const formSubmitHendler = (id)  => {\n        const newContact = {            \n            name: name,\n            number: phone        \n        };\n        const data = {\n            newContact: newContact,\n            id: id\n        }\n        dispatch(patchContact(data))          \n    }\n\n    const handleSubmit = (event, id) => {\n        event.preventDefault();\n        formSubmitHendler(id);\n        setName('');\n        setPhone('');\n    };\n\n\n\n    return (\n\n        <Form  onSubmit={(event) => handleSubmit(event, props.contactId)}>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control type=\"text\" value={name} name=\"name\" placeholder=\"Enter name\" onChange={handleChange} pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\" required/>\n                <Form.Text className=\"text-muted\">\n                    \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                </Form.Text>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Phone</Form.Label>\n                <Form.Control type=\"tel\" value={phone} name=\"number\" placeholder=\"Enter phone\" onChange={handleChange} pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\" required/>\n                <Form.Text className=\"text-muted\">\n                    \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                </Form.Text>\n            </Form.Group>\n            <Button  onClick={() => props.onHide()} variant=\"outline-success\" type=\"submit\">\n                Patch contact\n            </Button>\n        </Form>\n    );\n};\n\n\nexport default PatchContactForm;","// import Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport PatchContactForm from '../PatchContactForm/PatchContactForm';\n\nfunction PatchContactModal(props) {\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          To change a contact, fill in all fields\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n              <PatchContactForm onHide={props.onHide} contactId={props.contactid} />\n      </Modal.Body>\n    </Modal>\n  );\n};\n\n\nexport default PatchContactModal;\n","import React from 'react'\nimport { useDispatch } from \"react-redux\";\nimport { removeContact } from '../../redux/contacts/contacts-operations';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport { BsFillPencilFill, BsXLg } from \"react-icons/bs\";\nimport PatchContactModal from '../PatchContactModal/PatchContactModal'\n\n\n\nconst ContactListItem = ({ data }) => {\n\n    const [modalShow, setModalShow] = React.useState(false);\n\n    const dispatch = useDispatch();\n    const { name, number, id } = data\n\n    const deleteContact = Id => {\n        dispatch(removeContact(Id))\n    };\n\n\n    \n    return (\n        <>\n            <tr>\n                <td>{name}</td>\n                <td>{number}</td>\n                <td>\n                    <Button variant=\"outline-warning\" id={id} size=\"sm\" type='button' onClick={() => setModalShow(true)}><BsFillPencilFill /></Button>\n                    <Button variant=\"outline-danger\" size=\"sm\" onClick={() => deleteContact(id)} type='button'><BsXLg /></Button>\n                </td>\n            </tr>\n            <PatchContactModal\n                contactid={id}\n                show={modalShow}                \n                onHide={() => setModalShow(false)}\n            />\n        </>\n    )\n};\n\n\nexport default ContactListItem;\n\n\nContactListItem.propTypes = {\n    data: PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired       \n        })    \n};\n","import React from 'react'\nimport Loader from 'components/Loader/Loader'\nimport {useEffect} from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchContacts } from '../../redux/contacts/contacts-operations';\nimport { getContacts, getLoading } from '../../redux/contacts/contacts-selectors';\nimport { getFilter } from '../../redux/filter/filter-selectors';\nimport ContactListItem from 'components/ContactListItem/ContactListItem'\nimport Table from 'react-bootstrap/Table';\n\n\n\n\n\nconst ContactList = () => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContacts())\n    }, [dispatch]);\n    \n    const reduxContacts = useSelector(getContacts);\n    const reduxFilter = useSelector(getFilter);\n    const loading = useSelector(getLoading);\n\n    const getVisibleContacts = () => {\n        const normalizedFilter = reduxFilter.toLowerCase();\n        return reduxContacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter))\n    }\n\n    \n\n    const visibleContacts = getVisibleContacts()\n\n\n    return (\n        <>{loading && <Loader />}\n            <Table >\n                <thead>\n                    <tr>                    \n                    <th>Name</th>\n                    <th>Number</th>\n                    <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {visibleContacts.map((visibleContact) =>\n                        <ContactListItem key={visibleContact.id} data={visibleContact} />)}\n                </tbody>\n            </Table>\n        </>\n    );\n};\n\nexport default ContactList;\n\n","import ContactForm from '../../components/ContactForm/ContactForm';\nimport Filter from '../../components/Filter/Filter';\nimport ContactList from '../../components/ContactList/ContactList';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\n\n\n\nconst ContactsPage = () => {\n\n\n    return (\n        <Container>\n            <Row>\n                <Col sm={4}>\n                    <h3>Add contacts</h3>\n                    <ContactForm />\n                </Col>\n                <Col >\n                    <h3>Contacts</h3>\n                    <Filter />\n                    <ContactList />\n                </Col>\n            </Row>\n        </Container>\n        \n    )\n};\n\nexport default ContactsPage;"],"names":["getContacts","state","contacts","items","getLoading","loading","reduxContacts","useSelector","dispatch","useDispatch","useState","name","setName","phone","setPhone","handleChange","target","value","Form","onSubmit","event","preventDefault","find","contact","Notiflix","newContact","number","addContact","formSubmitHendler","className","controlId","type","placeholder","onChange","pattern","required","Button","variant","getFilter","filter","reduxFilter","inputEl","useRef","ref","addFilter","styles","props","handleSubmit","id","data","patchContact","contactId","onClick","onHide","Modal","size","centered","closeButton","contactid","React","modalShow","setModalShow","Id","removeContact","show","useEffect","fetchContacts","visibleContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","Table","map","visibleContact","Container","Row","Col","sm"],"sourceRoot":""}