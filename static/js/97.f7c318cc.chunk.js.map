{"version":3,"file":"static/js/97.f7c318cc.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","redux/filter/filter-selectors.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["\nexport const getContacts = state => state.contacts.items;\nexport const getLoading = state => state.contacts.loading;\n// export const getsContacts = ({contacts}) => contacts.items;","// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"contactLabel\":\"ContactForm_contactLabel__vt5it\",\"contactInput\":\"ContactForm_contactInput__z6XOX\",\"contactButton\":\"ContactForm_contactButton__jSKp4\"};","import { useState, useRef } from 'react'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addContact } from '../../redux/contacts/contacts-operations';\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\nimport styles from 'components/ContactForm/ContactForm.module.css'\n\n\nconst ContactForm = () => {\n\n    \n    const reduxContacts = useSelector(getContacts);    \n    const dispatch = useDispatch()\n\n    const [name, setName] = useState('');\n    const [phone, setPhone] = useState('');\n\n    const inputName = useRef(null);\n    const inputPhone = useRef(null);\n\n\n    \n    const handleChangeName = () => {        \n        setName(inputName.current.value)\n    };\n    \n    const handleChangeNumber = () => {\n                setPhone(inputPhone.current.value)\n    };\n    \n    const formSubmitHendler = ()  => {\n        if (reduxContacts.find(contact => contact.name === name)) {\n        alert(`${name} is alreadi in contacts.`);\n        } else\n        {const newContact = {            \n            name: name,\n            number: phone        \n        }; \n        dispatch(addContact(newContact))    \n        ;}    \n    }\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        formSubmitHendler();\n        setName('');\n        setPhone('');\n    };\n\n\n\n    return (\n        <form className={styles.contactForm} onSubmit={handleSubmit}>\n            <label className={styles.contactLabel}>\n                Name\n                <input\n                    className={styles.contactInput}\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    value={name}\n                    ref={inputName}\n                    onChange={handleChangeName}\n                />\n            </label>\n            <label className={styles.contactLabel}>\n                Number\n                <input\n                    className={styles.contactInput}\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    value={phone}\n                    ref={inputPhone}\n                    onChange={handleChangeNumber}\n                />\n            </label>            \n            <button className={styles.contactButton} type=\"submit\">Add contact</button>\n        </form>\n    );\n};\n\n\nexport default ContactForm;\n","export const getFilter = state => state.filter;","// extracted by mini-css-extract-plugin\nexport default {\"filterInput\":\"Filter_filterInput__1Cysk\",\"filterLabel\":\"Filter_filterLabel__+pnW-\"};","import React, { useRef } from 'react'\nimport { addFilter } from '../../redux/filter/filter-actions';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFilter } from '../../redux/filter/filter-selectors';\nimport styles from 'components/Filter/Filter.module.css'\n\n\n\n\nconst Filter = () => {\n\n    const reduxFilter = useSelector(getFilter); \n    const dispatch = useDispatch()\n\n    const handleChangeFilter = event => {\n        const { value } = event.target;\n        dispatch(addFilter(value))   \n    }\n\n    const inputEl = useRef(null);\n    return (\n    <label className={styles.filterLabel}>\n    Find contacts by name\n        <input\n            className={styles.filterInput}\n            type=\"text\"\n            name=\"filter\"\n            value={reduxFilter}\n            ref={inputEl}\n            onChange={handleChangeFilter}\n        />\n    </label>\n)}\n\nexport default Filter;","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { BallTriangle } from  'react-loader-spinner'\nimport styles from 'components/Loader/Loader.module.css'\n\n\n\n\nconst Loader = () => {\n    \n    return (\n        <div className={styles.loader}>\n            <BallTriangle />\n        </div>\n    )\n};\n\n\nexport default Loader;","// extracted by mini-css-extract-plugin\nexport default {\"contactListItem\":\"ContactListItem_contactListItem__A4sXv\",\"contactListButton\":\"ContactListItem_contactListButton__4fBOm\"};","import React from 'react'\nimport PropTypes from 'prop-types';\nimport styles from 'components/ContactListItem/ContactListItem.module.css'\n\n\nconst ContactListItem = ({ data, deleteContact }) => {\n    const { name, number, id } = data\n    return (<li>\n        <div className={styles.contactListItem}>\n        <p>{name}: {number}</p>\n            <button className={styles.contactListButton} onClick={() => deleteContact(id)} type='button'>Delete</button>\n            </div>\n    </li>)\n};\n\nexport default ContactListItem;\n\n\nContactListItem.propTypes = {\n    deleteContact: PropTypes.func.isRequired,\n    data: PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired       \n        })    \n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\"};","import React from 'react'\nimport Loader from 'components/Loader/Loader'\nimport {useEffect} from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { removeContact, fetchContacts } from '../../redux/contacts/contacts-operations';\nimport { getContacts, getLoading } from '../../redux/contacts/contacts-selectors';\nimport { getFilter } from '../../redux/filter/filter-selectors';\nimport ContactListItem from 'components/ContactListItem/ContactListItem'\nimport styles from 'components/ContactList/ContactList.module.css'\n\n\n\n\nconst ContactList = () => {\n    const dispatch = useDispatch();\n\n    useEffect(()=> {\n        dispatch(fetchContacts())        \n    }, [dispatch]);\n    \n    const reduxContacts = useSelector(getContacts);    \n    const reduxFilter = useSelector(getFilter); \n    const loading = useSelector(getLoading);\n\n    const getVisibleContacts = () => {\n        const normalizedFilter = reduxFilter.toLowerCase();        \n        return reduxContacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter))\n    }\n\n    const deleteContact = Id => {   \n        dispatch(removeContact(Id))\n    };\n\n    const visibleContacts = getVisibleContacts()\n     \n\n    return (\n        <>{loading && <Loader/>}\n    <ul className={styles.contactList}>\n        {visibleContacts.map((visibleContact) =>\n            <ContactListItem key={visibleContact.id} data={visibleContact} deleteContact={deleteContact} />)}\n            </ul>\n            </>\n)}\n\nexport default ContactList;\n\n","import ContactForm from '../../components/ContactForm/ContactForm';\nimport Filter from '../../components/Filter/Filter';\nimport ContactList from '../../components/ContactList/ContactList';\n\nconst ContactsPage = () => {\n\n\n    return (\n    <div>\n        <h1>Phonebook</h1> \n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList  />\n    </div>\n        \n    )\n}\n\nexport default ContactsPage;"],"names":["getContacts","state","contacts","items","getLoading","loading","reduxContacts","useSelector","dispatch","useDispatch","useState","name","setName","phone","setPhone","inputName","useRef","inputPhone","className","styles","onSubmit","event","preventDefault","find","contact","alert","newContact","number","addContact","formSubmitHendler","type","pattern","title","required","value","ref","onChange","current","getFilter","filter","reduxFilter","inputEl","target","addFilter","data","deleteContact","id","onClick","useEffect","fetchContacts","Id","removeContact","visibleContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","map","visibleContact"],"sourceRoot":""}